name: Build_x86_combined
on:
  repository_dispatch:
  workflow_dispatch:

# 定时触发编译
  schedule:
    - cron: '30 19 * * 4'

jobs:
  build:
    name: Build ${{ matrix.config.name }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        config:
          - name: "X86-5.4"
            repo_url: "https://github.com/xiangfeidexiaohuo/lede"
            repo_branch: "k3"
            kernel_ver: "5.4"
            config_file: "./configs/X86/x86_504.config"
            file_name: "x86_504"
            diy_script: "lean"
            type: "lede54"

          - name: "X86-Light-6.12"
            repo_url: "https://github.com/coolsnowwolf/lede"
            repo_branch: "master"
            kernel_ver: "6.12"
            config_file: "./configs/X86/x86_light.config"
            file_name: "x86_light"
            diy_script: "lean"
            type: "light"

          - name: "X86-6.12"
            repo_url: "https://github.com/coolsnowwolf/lede"
            repo_branch: "master"
            kernel_ver: "6.12"
            config_file: "./configs/X86/x86_612.config"
            file_name: "x86_612"
            diy_script: "lean"
            type: "lede"

          - name: "X86-R24.10-6.6"
            repo_url: "https://github.com/openwrt/openwrt"
            repo_branch: "openwrt-24.10"
            kernel_ver: "6.6"
            config_file: "./configs/X86/x86_r2410.config"
            file_name: "x86_r2410"
            diy_script: "op"
            type: "op"

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Free disk space
      uses: xiangfeidexiaohuo/actions@free-disk
      with:
        build-mount-path: /home/runner/work/AE86Wrt/AE86Wrt

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo timedatectl set-timezone "Asia/Shanghai"
        sudo apt-get update -y
        sudo apt-get install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs libnsl-dev nano ninja-build p7zip p7zip-full patch pkgconf python3 python3-pyelftools libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev libfuse-dev python3-setuptools g++ file clang nano genisoimage
        sudo apt-get clean
        git config --global user.name 'GitHub Actions' && git config --global user.email 'noreply@github.com'

    - name: Clone source
      run: |
        git clone https://github.com/xiangfeidexiaohuo/AE86Wrt.git && mv ./AE86Wrt/* ./ && rm -rf ./AE86Wrt
        git clone --depth 1 ${{ matrix.config.repo_url }} -b ${{ matrix.config.repo_branch}} openwrt
        cd openwrt
        cp -f ../diy/${{ matrix.config.diy_script }}/${{ matrix.config.diy_script }}1.sh ./
        chmod +x ./${{ matrix.config.diy_script }}1.sh && ./${{ matrix.config.diy_script }}1.sh

    - name: Update & Install feeds
      working-directory: ./openwrt
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        cp -f ../diy/${{ matrix.config.diy_script }}/${{ matrix.config.diy_script }}2.sh ./
        chmod +x ./${{ matrix.config.diy_script }}2.sh && ./${{ matrix.config.diy_script }}2.sh
        sed -i "s/KERNEL_PATCHVER:=.*/KERNEL_PATCHVER:=${{ matrix.config.kernel_ver }}/g" target/linux/x86/Makefile
        sed -i "s/KERNEL_TESTING_PATCHVER:=.*/KERNEL_TESTING_PATCHVER:=${{ matrix.config.kernel_ver }}/g" target/linux/x86/Makefile
        

        if [ "${{ matrix.config.type }}" = "lede" ]; then
           sed -i "s/DISTRIB_DESCRIPTION='*.*'/DISTRIB_DESCRIPTION='AE86Wrt-X86-Pure-$(date +%Y%m%d)'/g" package/lean/default-settings/files/zzz-default-settings
           sed -i "s/OPENWRT_RELEASE=\"*.*\"/OPENWRT_RELEASE=\"AE86Wrt-X86-Pure-$(date +%Y%m%d) By DaoDao\"/g" package/lean/default-settings/files/zzz-default-settings
        elif [ "${{ matrix.config.type }}" = "op" ]; then
           sed -i "s/DISTRIB_DESCRIPTION='*.*'/DISTRIB_DESCRIPTION='AE86Wrt-X86-R24.10-$(date +%Y%m%d)'/g" package/base-files/files/etc/openwrt_release
           sed -i "s/OPENWRT_RELEASE=\"*.*\"/OPENWRT_RELEASE=\"AE86Wrt-X86-R24.10-$(date +%Y%m%d) By DaoDao\"/g" package/base-files/files/usr/lib/os-release
        elif [ "${{ matrix.config.type }}" = "lede54" ]; then
           sed -i "s/DISTRIB_DESCRIPTION='*.*'/DISTRIB_DESCRIPTION='AE86Wrt-X86-Pure-$(date +%Y%m%d)'/g" package/lean/default-settings/files/zzz-default-settings
           sed -i "s/OPENWRT_RELEASE=\"*.*\"/OPENWRT_RELEASE=\"AE86Wrt-X86-Pure-$(date +%Y%m%d) By DaoDao\"/g" package/base-files/files/usr/lib/os-release
        elif [ "${{ matrix.config.type }}" = "light" ]; then
           sed -i "s/DISTRIB_DESCRIPTION='*.*'/DISTRIB_DESCRIPTION='AE86Wrt-X86-Light-$(date +%Y%m%d)'/g" package/lean/default-settings/files/zzz-default-settings
           sed -i "s/OPENWRT_RELEASE=\"*.*\"/OPENWRT_RELEASE=\"AE86Wrt-X86-Light-$(date +%Y%m%d) By DaoDao\"/g" package/lean/default-settings/files/zzz-default-settings
        fi

    - name: Configuration Customization
      run: |
        [ -e "${{ matrix.config.config_file }}" ] && mv "${{ matrix.config.config_file }}" openwrt/.config
        cd openwrt && make defconfig

    - name: Download package
      working-directory: ./openwrt
      run: |
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Build firmware
      working-directory: ./openwrt
      run: make -j$(nproc) V=s

    - name: Package artifacts
      run: |
        mkdir -p ./X86_Out/
        cp ./openwrt/.config ./X86_Out/${{ matrix.config.file_name }}.config
        
        getmd5() {
          md5sum=`md5sum $1`
          md5=`echo ${md5sum% *}`
          md5=`echo ${md5:0:10}`
        }
        
        rom=openwrt/bin/targets/x86/64/openwrt-x86-64-generic-squashfs-combined-efi.img.gz
        getmd5 $rom
        cp -a $rom ./X86_Out/AE86Wrt-${{ matrix.config.name }}-$(date +%Y%m%d)_${md5}.img.gz

        rom=openwrt/bin/targets/x86/64/openwrt-x86-64-generic-rootfs.tar.gz
        ## rom=openwrt/bin/targets/x86/64/openwrt-x86-64-generic-squashfs-rootfs.img.gz
        getmd5 $rom
        cp -a $rom ./X86_Out/AE86Wrt-${{ matrix.config.name }}-rootfs-$(date +%Y%m%d)_${md5}.tar.gz

    - name: Upload Firmware
      uses: actions/upload-artifact@main
      with:
        name: ${{ matrix.config.name }}-Firmware
        path: X86_Out/AE86Wrt-*.img.gz

    - name: Upload Rootfs
      uses: actions/upload-artifact@main
      with:
        name: ${{ matrix.config.name }}-ROOTFS
        path: X86_Out/AE86Wrt-*.tar.gz

    - name: Upload Config
      uses: actions/upload-artifact@main
      with:
        name: ${{ matrix.config.name }}-config
        path: X86_Out/*.config

    - name: Upload Packages
      uses: actions/upload-artifact@main
      with:
        name: ${{ matrix.config.name }}-Packages
        path: openwrt/bin/packages/**

  create_release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@main
      with:
        path: downloaded_artifacts

    - name: Prepare release assets
      run: |
        mkdir -p release_assets
        find downloaded_artifacts -name "*.img.gz" -exec cp {} release_assets \;

    - name: Generate release info
      id: release_info
      run: |
        echo "release_tag=$(date +%Y%m%d%H%M%S)" >> $GITHUB_OUTPUT
        echo "release_name=AE86Wrt-软路由(X86_64)-$(date +%Y%m%d)" >> $GITHUB_OUTPUT

    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.release_info.outputs.release_tag }}
        name: ${{ steps.release_info.outputs.release_name }}
        files: |
          release_assets/*.img.gz
        token: ${{ secrets.GITHUB_TOKEN }}
