name: Build_ipq807x

on:
  repository_dispatch:
  workflow_dispatch:

# 定时触发编译
  schedule:
    - cron: 20 22 * * 4

jobs:
  build:
    name: Build ${{ matrix.model }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        model: ["AX6", "AX3600", "AX9000"]
        include:
          - model: "AX6"
            config_file: "./configs/ARM/ipq/AX6.config"
            description_prefix: "AE86Wrt-Redmi-AX6"
            sysupgrade_file: "openwrt-qualcommax-ipq807x-redmi_ax6-squashfs-sysupgrade.bin"
            factory_file: "openwrt-qualcommax-ipq807x-redmi_ax6-squashfs-factory.ubi"
            type: "ipq807x"

          - model: "AX3600"
            config_file: "./configs/ARM/ipq/AX3600.config"
            description_prefix: "AE86Wrt-Xiaomi-AX3600"
            sysupgrade_file: "openwrt-qualcommax-ipq807x-xiaomi_ax3600-squashfs-sysupgrade.bin"
            factory_file: "openwrt-qualcommax-ipq807x-xiaomi_ax3600-squashfs-factory.ubi"
            type: "ipq807x"

          - model: "AX9000"
            config_file: "./configs/ARM/ipq/AX9000.config"
            description_prefix: "AE86Wrt-Xiaomi-AX9000"
            sysupgrade_file: "openwrt-qualcommax-ipq807x-xiaomi_ax9000-squashfs-sysupgrade.bin"
            factory_file: "openwrt-qualcommax-ipq807x-xiaomi_ax9000-squashfs-factory.ubi"
            type: "ipq807x"

          - model: "301W"
            config_file: "./configs/ARM/ipq/301W.config"
            description_prefix: "AE86Wrt-QNAP-301W"
            sysupgrade_file: "openwrt-qualcommax-ipq807x-qnap_301w-squashfs-sysupgrade.bin"
            factory_file: "openwrt-qualcommax-ipq807x-qnap_301w-squashfs-factory.bin"
            type: "qnap"

          - model: "BE7000"
            config_file: "./configs/ARM/ipq/BE7000.config"
            description_prefix: "AE86Wrt-Xiaomi-BE7000"
            sysupgrade_file: "openwrt-qualcommbe-ipq95xx-xiaomi_be7000-squashfs-sysupgrade.bin"
            factory_file: "openwrt-qualcommbe-ipq95xx-xiaomi_be7000-squashfs-factory.ubi"
            type: "ipq95xx"

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Free disk space
        uses: xiangfeidexiaohuo/actions@free-disk
        with:
          build-mount-path: /home/runner/work/AE86Wrt/AE86Wrt

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo timedatectl set-timezone "Asia/Shanghai"
          sudo apt-get update -y
          sudo apt-get install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp libnsl-dev nano ninja-build p7zip p7zip-full patch pkgconf python3 python3-pyelftools libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev libfuse-dev python3-setuptools g++ file clang nano genisoimage
          sudo apt-get clean
          git config --global user.name 'GitHub Actions' && git config --global user.email 'noreply@github.com'

      - name: Clone source code
        env:
          REPO_URL: https://github.com/coolsnowwolf/lede
          REPO_BRANCH: master
        run: |
          git clone https://github.com/xiangfeidexiaohuo/AE86Wrt.git && mv ./AE86Wrt/* ./ && rm -rf ./AE86Wrt
          git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
          cd openwrt
          cp -f ../diy/lean/lean1.sh ./
          chmod +x ./lean1.sh && ./lean1.sh

      - name: Update & Install feeds
        working-directory: ./openwrt
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          cp -f ../diy/lean/lean2.sh ./
          chmod +x ./lean2.sh && ./lean2.sh
          sed -i "s/KERNEL_PATCHVER:=*.*/KERNEL_PATCHVER:=6.12/g" target/linux/qualcommax/Makefile
          sed -i "s/KERNEL_TESTING_PATCHVER:=*.*/KERNEL_TESTING_PATCHVER:=6.12/g" target/linux/qualcommax/Makefile
          sed -i "s/DISTRIB_DESCRIPTION='*.*'/DISTRIB_DESCRIPTION='${{ matrix.description_prefix }}-$(date +%Y%m%d)'/g" package/lean/default-settings/files/zzz-default-settings
          sed -i "s/OPENWRT_RELEASE=\"*.*\"/OPENWRT_RELEASE=\"${{ matrix.description_prefix }}-$(date +%Y%m%d) By DaoDao\"/g" package/lean/default-settings/files/zzz-default-settings

      - name: Configuration Customization
        run: |
          [ -e "${{ matrix.config_file }}" ] && mv "${{ matrix.config_file }}" openwrt/.config
          cd openwrt && make defconfig

      - name: Download package
        working-directory: ./openwrt
        run: |
          make download -j$(nproc)
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;

      - name: Build firmware
        working-directory: ./openwrt
        run: |
          make -j$(nproc) V=s

      - name: Assemble Artifact
        id: assemble_artifact
        run: |
          rm -rf ./${{ matrix.model }}_Out
          mkdir -p ./${{ matrix.model }}_Out/
          cp -a ./openwrt/.config ./${{ matrix.model }}_Out/${{ matrix.model }}.config
          
          getmd5() {
            md5sum=`md5sum $1`
            md5=`echo ${md5sum% *}`
            md5=`echo ${md5:0:10}`
          }

          if [ "${{ matrix.type }}" = "ipq807x" ]; then
             ##rom=openwrt/bin/targets/qualcommax/ipq807x/${{ matrix.sysupgrade_file }}
             ##getmd5 $rom
             ##cp -a $rom ./${{ matrix.model }}_Out/${{ matrix.description_prefix }}-6.12-$(date +%Y%m%d)_${md5}.bin       
             rom=openwrt/bin/targets/qualcommax/ipq807x/${{ matrix.factory_file }}
             getmd5 $rom
             cp -a $rom ./${{ matrix.model }}_Out/${{ matrix.description_prefix }}-6.12-$(date +%Y%m%d)-uboot_${md5}.ubi
          elif [ "${{ matrix.type }}" = "qnap" ]; then
             rom=openwrt/bin/targets/qualcommax/ipq807x/${{ matrix.factory_file }}
             getmd5 $rom
             cp -a $rom ./${{ matrix.model }}_Out/${{ matrix.description_prefix }}-6.12-$(date +%Y%m%d)-uboot_${md5}.bin
          elif [ "${{ matrix.type }}" = "ipq95xx" ]; then          
             rom=openwrt/bin/targets/qualcommbe/ipq95xx/${{ matrix.factory_file }}
             getmd5 $rom
             cp -a $rom ./${{ matrix.model }}_Out/${{ matrix.description_prefix }}-6.12-$(date +%Y%m%d)-uboot_${md5}.ubi
          fi

      - name: Upload Firmwares
        uses: actions/upload-artifact@main
        with:
          name: ${{ matrix.model }}-Firmware
          path: ${{ matrix.model }}_Out/${{ matrix.description_prefix }}*

      - name: Upload config
        uses: actions/upload-artifact@main
        with:
          name: ${{ matrix.model }}-config
          path: ${{ matrix.model }}_Out/${{ matrix.model }}.config

      - name: Upload Packages
        uses: actions/upload-artifact@main
        with:
          name: ${{ matrix.model }}-Packages
          path: openwrt/bin/packages

  create_release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: downloaded_artifacts

      - name: Prepare release assets
        run: |
          mkdir -p release_assets
          find downloaded_artifacts \( -name "*.bin" -o -name "*.ubi" \) -exec cp {} release_assets \;

      - name: Generate release info
        id: release_info
        run: |
          echo "release_tag=$(date +%Y%m%d%H%M%S)" >> $GITHUB_OUTPUT
          echo "release_name=AE86Wrt-IPQ807x_IPQ95XX-6.12内核-$(date +%Y%m%d)" >> $GITHUB_OUTPUT

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.release_info.outputs.release_tag }}
          name: ${{ steps.release_info.outputs.release_name }}
          files: |
            release_assets/*
          token: ${{ secrets.GITHUB_TOKEN }}

